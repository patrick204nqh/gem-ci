name: Performance Monitor
description: 'Performance tracking for commands'

inputs:
  step-name:
    description: 'Name of the step being monitored'
    required: true
  command:
    description: 'Command to execute and monitor'
    required: true
  timeout-minutes:
    description: 'Timeout in minutes for command execution'
    required: false
    default: '30'

outputs:
  duration:
    description: 'Execution duration in seconds'
    value: ${{ steps.monitor.outputs.duration }}
  status:
    description: 'Execution status (success/failure/timeout)'
    value: ${{ steps.monitor.outputs.status }}

runs:
  using: composite
  steps:
    - name: 📊 Monitor - ${{ inputs.step-name }}
      id: monitor
      shell: bash
      run: |
        set -euo pipefail
        
        echo "📊 Starting: ${{ inputs.step-name }}"
        START_TIME=$(date +%s)
        
        # Execute command with timeout
        if timeout "${{ inputs.timeout-minutes }}m" bash -c "${{ inputs.command }}"; then
          STATUS="success"
          EXIT_CODE=0
        else
          EXIT_CODE=$?
          if [ $EXIT_CODE -eq 124 ]; then
            STATUS="timeout"
          else
            STATUS="failure"
          fi
        fi
        
        END_TIME=$(date +%s)
        DURATION=$((END_TIME - START_TIME))
        
        echo "⏱️ Duration: ${DURATION}s"
        echo "duration=$DURATION" >> $GITHUB_OUTPUT
        echo "status=$STATUS" >> $GITHUB_OUTPUT
        
        exit $EXIT_CODE