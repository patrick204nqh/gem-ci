name: Standardized Notifications
description: 'Send standardized notifications for workflow events'

inputs:
  slack-bot-token:
    description: 'Slack bot token for API calls'
    required: false
  slack-channel-id:
    description: 'Slack channel ID to send notifications'
    required: false
  message:
    description: 'Notification message'
    required: true
  status:
    description: 'Status (success, failure, warning)'
    required: true
  github-token:
    description: 'GitHub token for API calls'
    required: false

runs:
  using: composite
  steps:
    - name: 📢 Prepare notification
      shell: bash
      run: |
        set -euo pipefail
        
        case "${{ inputs.status }}" in
          success)
            EMOJI="✅"
            COLOR="#36a64f"
            ;;
          failure)
            EMOJI="❌"
            COLOR="#ff0000"
            ;;
          warning)
            EMOJI="⚠️"
            COLOR="#ffaa00"
            ;;
          *)
            EMOJI="ℹ️"
            COLOR="#0066cc"
            ;;
        esac
        
        echo "NOTIFICATION_EMOJI=$EMOJI" >> $GITHUB_ENV
        echo "NOTIFICATION_COLOR=$COLOR" >> $GITHUB_ENV
        echo "NOTIFICATION_MESSAGE=${{ inputs.message }}" >> $GITHUB_ENV
    
    - name: 💬 Send Slack notification via Bot Token
      if: inputs.slack-bot-token != '' && inputs.slack-channel-id != ''
      shell: bash
      run: |
        set -euo pipefail
        
        PAYLOAD=$(cat <<EOF
        {
          "channel": "${{ inputs.slack-channel-id }}",
          "text": "$NOTIFICATION_EMOJI Workflow Notification",
          "attachments": [
            {
              "color": "$NOTIFICATION_COLOR",
              "fields": [
                {
                  "title": "Repository",
                  "value": "${{ github.repository }}",
                  "short": true
                },
                {
                  "title": "Workflow",  
                  "value": "${{ github.workflow }}",
                  "short": true
                },
                {
                  "title": "Status",
                  "value": "${{ inputs.status }}",
                  "short": true
                },
                {
                  "title": "Message",
                  "value": "$NOTIFICATION_MESSAGE",
                  "short": false
                }
              ]
            }
          ]
        }
        EOF
        )
        
        curl -X POST \
             -H "Authorization: Bearer ${{ inputs.slack-bot-token }}" \
             -H "Content-type: application/json" \
             --data "$PAYLOAD" \
             "https://slack.com/api/chat.postMessage"